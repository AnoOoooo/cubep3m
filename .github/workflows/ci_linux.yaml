name: CI on Linux

on: [push, pull_request]

defaults:
  run:
    shell: bash -ex {0}

jobs:
  build-x86_64:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "GNU Fortran 9"
            pkgs: "gfortran-9 sfftw-dev mpi-default-bin"
            makefile: Makefile_gnu_sfftw2

          - name: "GNU Fortran 11"
            pkgs: "gfortran-11 sfftw-dev mpi-default-bin"
            makefile: Makefile_gnu_sfftw2
            
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Build dependencies
        run: sudo apt-get install --yes ${{ matrix.pkgs }} 

      - name: Setup parameters
        run: source README

      - name: Build with ${{ matrix.makefile }}
        working-directory: source_threads
        run: make -f ${{ matrix.makefile }}
  
      - name: Check binary
        working-directory: source_threads
        run: file cubep3m | grep x86-64

  build-aarch64:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "ARM64 GNU Fortran 9"
            pkgs: "gfortran-9 sfftw-dev mpi-default-bin"
            makefile: Makefile_gnu_sfftw2

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: aarch64
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        dockerRunArgs: |
          --volume "${PWD}:/cubep3m"
        install: |
          apt-get update -q -y
          apt-get install -q -y ${{ matrix.pkgs }} make file
        run: |
          set -x
          cd /cubep3m
          source README
          cd source_threads
          make -f ${{ matrix.makefile }}
          file cubep3m | grep aarch64